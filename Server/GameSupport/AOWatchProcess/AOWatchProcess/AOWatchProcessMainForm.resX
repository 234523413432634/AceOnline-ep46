<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAAAGACoDAAAJgAAABAQAAAAABgAaAMAAM4MAAAoAAAAIAAAAEAAAAABABgAAAAAAAAM
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAgICAgICAgICA
        gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
        gICAgICAgICAgICAgICAAAAAAAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAA
        gAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgICAAAAAAAAAgAAA
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////gAAAgICAAAAAAAAAgAAA////////////////////////////////
        ////////////////gICAQklLQUhLpqam////////////////////////////////////////////gAAA
        gICAAAAAAAAAgAAA////////////////////////////////////////////aWtrKS0tfYKBVltbJSgp
        iYqJ////////////////////////////////////////gAAAgICAAAAAAAAAgAAA////////////////
        ////////////////////////PTw5HRsYJiQfQ0E/NTQyJCMgHBsZSUhI////////////////////////
        ////////////gAAAgICAAAAAAAAAgAAA////////////////////////////////////Ozs6JCEfREdG
        UEtCPjctOjMqSkhDMTU2JSMgNTY3////////////////////////////////gAAAgICAAAAAAAAAgAAA
        ////////////////////////////jIuLNDo7XWlqPkREOTgyZF1LdG5bV1JEOjctLi4rTFBPN0JDFhoc
        ////////////////////////////gAAAgICAAAAAAAAAgAAA////////////////////////////R0hI
        ZnR3s8nOSFRWUU1Aa2ZWk5B+ZmJUQD0wNDIrV2Rnd4mMHCkrIyUl////////////////////////gAAA
        gICAAAAAAAAAgAAA////////////////////////////X2dpqb/Dk6WqRE1QTElCZmVcpKGPaWdZPT02
        NDIwQUxRd4qNS11gLTM1////////////////////////gAAAgICAAAAAAAAAgAAA////////////////
        ////////////fImLvNTZbXt/Mjg7KCkqWVdPlZB+Y2BQNTQvHB0fMzs/Xm5ya4CEPUdJ////////////
        ////////////gAAAgICAAAAAAAAAgAAA////////////////////////////e4KDjqKnT1lcGh0cFhcT
        Ly4kaWZWR0Q5GxsWCgoKHB8iT1xgXHBzYWZn////////////////////////gAAAgICAAAAAAAAAgAAA
        ////////////////////////////urq6YW5xPkZIGRkQKCcSNjUTREIfNjQYJicaKC0tFBQVOkVKSFRW
        urq5////////////////////////gAAAgICAAAAAAAAAgAAA////////////////////////////////
        anJ0QktLJCMPQj8VU08TUlAQSkYOS1NEaXh/TlVWKjY6V11e////////////////////////////gAAA
        gICAAAAAAAAAgAAA////////////////////////////////gYeJWmZnMS8VT0wSd3IlhIEsZWEUZHJs
        doqTTFZYJTI2e35/////////////////////////////gAAAgICAAAAAAAAAgAAA////////////////
        ////////////////oKKieIiLWl5KR0MGk485t7NXdHEWZXBaW2ptMTw/ND9C////////////////////
        ////////////gAAAgICAAAAAAAAAgAAA////////////////////////////////////ho+RkJ6adHlY
        gIA+lJJFbWweXWM+Ul9fOUdLcnV3////////////////////////////////gAAAgICAAAAAAAAAgAAA
        ////////////////////////////////////////jJeZsL24hYxte4BZcnZQbHZhXm5xb3V3////////
        ////////////////////////////gAAAgICAAAAAAAAAgAAA////////////////////////////////
        ////////////pKqrgYh+iY6FfoN5bndyeICD////////////////////////////////////////gAAA
        gICAAAAAAAAAgAAA////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////gAAAgICAAAAAAAAAgAAAwMDAwMDAwMDAwMDA
        wMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA
        wMDAwMDAwMDAgAAAgICAAAAAAAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAA
        gAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgICAAAAAAAAAgAAA
        gAAA/wAAgAAA/wAAgAAA/wAAgAAA/wAAgAAA/wAAgAAA/wAAgAAA/wAAgAAA/wAAgAAA/wAAgAAA//8A
        /wAA//8A/wAA//8AgAAAAAD/gICAgAAAgICAAAAAAAAAgAAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA
        /wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAAgAAA
        AAAAAAAAAAAAAAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAA
        gAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////////////////////8AAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAA8AAAAf///////////////8oAAAAEAAAACAAAAABABgAAAAAAAAD
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAgICA
        gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAA////////////////////
        ////////////////////////////////gAAAgICAgAAA////////////////////////QklLpqam////
        ////////////////gAAAgICAgAAA////////////////////HRsYQ0E/JCMgSUhI////////////////
        gAAAgICAgAAA////////////jIuLXWlqOTgydG5bOjctTFBPFhoc////////////gAAAgICAgAAA////
        ////////X2dpk6WqTElCpKGPPT02QUxRS11g////////////gAAAgICAgAAA////////////e4KDT1lc
        FhcTaWZWGxsWHB8iXHBz////////////gAAAgICAgAAA////////////////QktLQj8VUlAQS1NETlVW
        V11e////////////gAAAgICAgAAA////////////////eIiLR0MGt7NXZXBaMTw/////////////////
        gAAAgICAgAAA////////////////////sL24e4BZbHZhb3V3////////////////gAAAgICAgAAAwMDA
        wMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAgAAAgICAgAAA/wAA/wAA/wAA/wAA/wAA
        /wAA/wAA/wAA/wAA//8A//8A//8AAAD/gAAAAAAAAAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAAgAAA
        gAAAgAAAgAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
        AACAAwAA//8AAA==
</value>
  </data>
</root>